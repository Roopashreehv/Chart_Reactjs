{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\Documents\\\\Table\\\\myapp\\\\src\\\\Chart.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from \"react\";\nimport React from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport \"./index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Charts() {\n  _s();\n  const [column, setColumn] = useState([]);\n  const [records, setRecords] = useState([]);\n  useEffect(() => {\n    fetch(\"https://api.mfapi.in/mf/100049\").then(res => res.json()).then(obj => {\n      setColumn(Object.keys(obj.data[0]));\n      setRecords(obj.data);\n    });\n  }, []);\n\n  // Extract data for the line chart\n  const chartData = {\n    labels: records.map(record => record.date),\n    datasets: [{\n      label: \"NAV\",\n      data: records.map(record => record.nav),\n      fill: false,\n      borderColor: \"rgb(75, 192, 192)\",\n      tension: 0.1\n    }]\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"tables\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [column.map((c, i) => /*#__PURE__*/_jsxDEV(\"th\", {\n            children: c\n          }, i, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this)), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Line Chart\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: records.map((record, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: record.nav\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, i, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      data: chartData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_s(Charts, \"TToqxzs8XsP1PLua4ziBzNXhsH8=\");\n_c = Charts;\nexport default Charts;\nvar _c;\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"names":["useEffect","useState","React","Line","jsxDEV","_jsxDEV","Charts","_s","column","setColumn","records","setRecords","fetch","then","res","json","obj","Object","keys","data","chartData","labels","map","record","date","datasets","label","nav","fill","borderColor","tension","children","className","c","i","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Admin/Documents/Table/myapp/src/Chart.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport \"./index.css\";\r\n\r\n\r\nfunction Charts() {\r\n    const [column, setColumn] = useState([]);\r\n    const [records, setRecords] = useState([]);\r\n    \r\n    useEffect(() => {\r\n      fetch(\"https://api.mfapi.in/mf/100049\")\r\n        .then((res) => res.json())\r\n        .then((obj) => {\r\n          setColumn(Object.keys(obj.data[0]));\r\n          setRecords(obj.data);\r\n        });\r\n    }, []);\r\n  \r\n    // Extract data for the line chart\r\n    const chartData = {\r\n      labels: records.map((record) => record.date),\r\n      datasets: [\r\n        {\r\n          label: \"NAV\",\r\n          data: records.map((record) => record.nav),\r\n          fill: false,\r\n          borderColor: \"rgb(75, 192, 192)\",\r\n          tension: 0.1,\r\n        },\r\n      ],\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <table className=\"tables\">\r\n          <thead>\r\n            <tr>\r\n              {column.map((c, i) => (\r\n                <th key={i}>{c}</th>\r\n              ))}\r\n              <th>Line Chart</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {records.map((record, i) => (\r\n              <tr key={i}>\r\n                <td>{record.date}</td>\r\n                <td>{record.nav}</td>\r\n                <td></td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n  \r\n        {/* Line Chart */}\r\n        <Line data={chartData} />\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  export default Charts;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}